# This is a basic workflow to help you get started with Actions

name: Victor Terraform Actions Demo

# Controls when the action will run. 
on:
  # Triggers the workflow on push or pull request events but only for the main branch
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]

  # Allows you to run this workflow manually from the Actions tab
  workflow_dispatch:

# A workflow run is made up of one or more jobs that can run sequentially or in parallel
jobs:
  # This workflow contains a single job called "build"
  build:
    # The type of runner that the job will run on
    runs-on: ubuntu-latest

    env:
      ARM_SUBSCRIPTION_ID: '6bf9e1c9-7479-4367-b1ed-51616ccb123c'
      ARM_TENANT_ID: 'db4c5d58-840a-4455-a220-18eed29c63ff'
      ARM_CLIENT_ID: '159ca3e7-e86d-434f-b368-7083cb5adead'
      ARM_CLIENT_SECRET: ${{ screts.ARM_CLIENT_SECRET }}
             # Above is referencing the secrets store in Github to not expose the secret itself
      AZURE_STORAGE: 'terraformcanekdemo1'
      
    # Steps represent a sequence of tasks that will be executed as part of the job
    steps:
      # Checks-out your repository under $GITHUB_WORKSPACE, so your job can access it
      - uses: actions/checkout@v2

      - name: Azure Login
        uses: Azure/login@v1
        with:
        # Paste output of `az ad sp create-for-rbac` as value of secret variable: AZURE_CREDENTIALS
        creds: ${{ secrets.AZURE_CREDENTIALS }}
        
        
      # Runs a single command using the runners shell
      - name: Build Terraform State
        run: chmod +x ./tfstate.sh && ./tfstate.sh ${{ env.AZURE_STORAGE }}
        
      # This step installs Terraform on this environment
      - name: HashiCorp - Setup Terraform
        uses: hashicorp/setup-terraform@v1.2.1
        
      - name: Terraform init
        run: terraform init -backend-config="storage_account_name"=${{ env.AZURE_STORAGE }}
        
      - name: Terraform Plan
        run: terraform plan -out=tfplan
        
      - name: Terraform Apply
        run: terraform apply tfplan 
      
        
  
